name: release

on:
  push:
    branches:
      - beta
    #   - main

jobs:
#   lint:
#     runs-on: ${{ matrix.os }}

#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#         deno: [v1.x]

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v5

#       - uses: denoland/setup-deno@v1
#         with:
#           deno-version: ${{ matrix.deno }}

#       - name: Lint
#         run: |
#           deno fmt --check
#           deno lint

#   test:
#     runs-on: ${{ matrix.os }}

#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#         deno: [v1.x]

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v5

#       - uses: denoland/setup-deno@v1
#         with:
#           deno-version: ${{ matrix.deno }}

#       - name: Test
#         run: deno task test --coverage=coverage

#       - name: Generate coverage
#         run: deno coverage coverage --output=cov_profile.lcov --lcov

#       - uses: codecov/codecov-action@v4
#         with:
#           files: cov_profile.lcov
#           token: ${{ secrets.CODECOV_TOKEN }}

  release:
    # needs: [lint, test]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    outputs:
      new_release: ${{ steps.semantic.outputs.new_release_published }}
      version: ${{ steps.semantic.outputs.new_release_version }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: cycjimmy/semantic-release-action@v5
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: [release]
    if: ${{ needs.release.outputs.new_release == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: denoland/setup-deno@v2
        with:
          deno-version: vx.x.x

      - name: publish
        run: deno publish --set-version=${{ needs.release.outputs.version }}
